{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Node Configuration Template",
  "description": "Template for configuring React Flow nodes in the Synthetic Data Suite",
  
  "categories": {
    "preprocessing": {
      "label": "Preprocessing",
      "color": "#3b82f6",
      "description": "Data preparation and cleaning",
      "bgColor": "bg-blue-100",
      "borderColor": "border-blue-200",
      "textColor": "text-blue-800"
    },
    "training": {
      "label": "Training", 
      "color": "#8b5cf6",
      "description": "Model training and optimization",
      "bgColor": "bg-purple-100",
      "borderColor": "border-purple-200",
      "textColor": "text-purple-800"
    },
    "generation": {
      "label": "Generation",
      "color": "#10b981", 
      "description": "Data synthesis and sampling",
      "bgColor": "bg-green-100",
      "borderColor": "border-green-200",
      "textColor": "text-green-800"
    },
    "evaluation": {
      "label": "Evaluation",
      "color": "#f59e0b",
      "description": "Model and data evaluation",
      "bgColor": "bg-yellow-100",
      "borderColor": "border-yellow-200", 
      "textColor": "text-yellow-800"
    }
  },

  "nodes": [
    {
      "id": "example-node",
      "type": "exampleType",
      "name": "Example Node",
      "description": "This is an example node for demonstration",
      "category": "preprocessing",
      "color": "#3b82f6",
      "icon": "üîß",
      "handles": {
        "inputs": 1,
        "outputs": 1
      },
      "config": {
        "parameters": [
          {
            "name": "param1",
            "type": "string",
            "default": "default_value",
            "description": "Example parameter"
          }
        ]
      }
    },
    {
      "id": "multi-input-example",
      "type": "multiInputExample",
      "name": "Multi Input Example",
      "description": "Example with multiple inputs and outputs",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üîÄ",
      "handles": {
        "inputs": 2,
        "outputs": 2
      }
    },
    {
      "id": "no-input-example",
      "type": "sourceNode",
      "name": "Source Node",
      "description": "Node that generates data (no inputs)",
      "category": "generation",
      "color": "#10b981",
      "icon": "üìÅ",
      "handles": {
        "inputs": 0,
        "outputs": 1
      }
    },
    {
      "id": "sink-example",
      "type": "sinkNode",
      "name": "Sink Node", 
      "description": "Node that consumes data (no outputs)",
      "category": "evaluation",
      "color": "#f59e0b",
      "icon": "üíæ",
      "handles": {
        "inputs": 1,
        "outputs": 0
      }
    }
  ],

  "_documentation": {
    "categories": {
      "description": "Define the available categories for nodes",
      "properties": {
        "label": "Display name for the category",
        "color": "Hex color code for the category",
        "description": "Description of what this category contains",
        "bgColor": "Tailwind CSS background color class",
        "borderColor": "Tailwind CSS border color class",
        "textColor": "Tailwind CSS text color class"
      }
    },
    "nodes": {
      "description": "Array of node definitions",
      "properties": {
        "id": "Unique identifier for the node",
        "type": "Type identifier used by React Flow (must be unique)",
        "name": "Display name shown in the sidebar and on the node",
        "description": "Description shown in tooltips or node details",
        "category": "Must match one of the defined categories",
        "color": "Hex color for this specific node (usually matches category)",
        "icon": "Unicode emoji or character to display on the node",
        "handles": {
          "inputs": "Number of input handles (0 for source nodes)",
          "outputs": "Number of output handles (0 for sink nodes)"
        },
        "config": {
          "description": "Optional configuration for advanced node features",
          "parameters": "Array of configurable parameters for the node"
        }
      }
    },
    "usage": {
      "addNewNode": "1. Add a new object to the 'nodes' array with all required properties",
      "addNewCategory": "1. Add the category to 'categories' object 2. Use the category name in node definitions",
      "colors": "Use hex color codes for consistency. Tailwind classes should match the hex colors",
      "icons": "Use Unicode emojis or single characters. Avoid complex symbols that might not render properly"
    }
  }
}
