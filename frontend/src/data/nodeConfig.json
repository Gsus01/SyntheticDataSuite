{
  "categories": {
    "preprocessing": {
      "label": "Preprocessing",
      "color": "#3b82f6",
      "description": "Data preparation and cleaning",
      "bgColor": "bg-blue-100",
      "borderColor": "border-blue-200",
      "textColor": "text-blue-800"
    },
    "training": {
      "label": "Training",
      "color": "#8b5cf6",
      "description": "Model training and optimization",
      "bgColor": "bg-purple-100",
      "borderColor": "border-purple-200",
      "textColor": "text-purple-800"
    },
    "generation": {
      "label": "Generation",
      "color": "#10b981",
      "description": "Data synthesis and sampling",
      "bgColor": "bg-green-100",
      "borderColor": "border-green-200",
      "textColor": "text-green-800"
    }
  },
  "nodes": [
    {
      "id": "preprocess-data",
      "type": "preprocess",
      "name": "Preprocess Data",
      "description": "Clean and prepare data for training",
      "category": "preprocessing",
      "color": "#3b82f6",
      "icon": "üîß",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "feature-extraction",
      "type": "featureExtraction",
      "name": "Feature Extraction",
      "description": "Extract features from raw data",
      "category": "preprocessing",
      "color": "#3b82f6",
      "icon": "üìä",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "train-hmm",
      "type": "trainHMM",
      "name": "Train HMM",
      "description": "Hidden Markov Model training",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üß†",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "train-vae",
      "type": "trainVAE",
      "name": "Train VAE",
      "description": "Variational Autoencoder",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "‚ö°",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "train-bayesian",
      "type": "trainBayesian",
      "name": "Bayesian Networks",
      "description": "Probabilistic graphical model",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üîó",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "train-copulas",
      "type": "trainCopulas",
      "name": "Copulas",
      "description": "Dependency modeling",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üîÑ",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "gaussian-process",
      "type": "trainGP",
      "name": "Gaussian Process",
      "description": "Non-parametric probabilistic model",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üìà",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "boltzmann-machines",
      "type": "trainBoltzmann",
      "name": "Boltzmann Machines",
      "description": "Stochastic recurrent neural network",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üî•",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "kernel-density",
      "type": "trainKDE",
      "name": "Kernel Density Estimators",
      "description": "Non-parametric density estimation",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üìä",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "sparse-coding",
      "type": "trainSparseCoding",
      "name": "Sparse Coding",
      "description": "Learning sparse representations",
      "category": "training",
      "color": "#8b5cf6",
      "icon": "üîç",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "generate-data",
      "type": "generateData",
      "name": "Generate Data",
      "description": "Synthesize new data samples",
      "category": "generation",
      "color": "#10b981",
      "icon": "‚ú®",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
      "id": "sample-model",
      "type": "sampleModel",
      "name": "Sample from Model",
      "description": "Generate samples from trained model",
      "category": "generation",
      "color": "#10b981",
      "icon": "üé≤",
      "handles": {
        "inputs": 1,
        "outputs": 1
      }
    },
    {
        "id": "my-new-node",
        "type": "myNewType", 
        "name": "My New Node",
        "description": "Description here",
        "category": "preprocessing",
        "color": "#3b82f6",
        "icon": "‚öôÔ∏è",
        "handles": { "inputs": 1, "outputs": 1 }
    }
  ]
}
